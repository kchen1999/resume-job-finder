services:
  node-backend:
    build:
      context: ./node-backend
      dockerfile: Dockerfile 
    init: true
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - JINA_API_KEY=${JINA_API_KEY}  
      - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      - resume-app-net
    restart: unless-stopped

  python-backend:
    build:
      context: ./python_backend
      dockerfile: Dockerfile 
    init: true
    environment:
      - NODE_BACKEND_URL={NODE_BACKEND_URL} 
      - GROQ_API_KEY=${GROQ_API_KEY}
    ports:
      - "5000:5000"
    networks:
      - resume-app-net
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile      
    ports:
      - "80:80"   
    networks:
      - resume-app-net                     
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    ports:
      - "8080:80"                       
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro 
      - ./empty-default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - node-backend
      - python-backend
    networks:
      - resume-app-net
    restart: unless-stopped

networks:
  resume-app-net:
    driver: bridge
